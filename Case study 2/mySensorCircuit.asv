%% Case study 3: Circuits as Resonators, Sensors, and Filters
% *ESE 105* 
%
% *Name: FILL IN HERE*
%
% function mySensorCircuit(Vin,h) receives a time-series voltage sequence
% sampled with interval h, and returns the output voltage sequence produced
% by a circuit
%
% inputs:
% Vin - time-series vector representing the voltage input to a circuit
% h - scalar representing the sampling interval of the time series in
% seconds
%
% outputs:
% Vout - time-series vector representing the output voltage of a circuit

function Vout = mySensorCircuit(Vin,h)
    % Default RLC circuit (Task 3)
    R = 100;
    L = 0.1;
    C = 0.1e-6;
    
    % TASK 4 - HELICOPTER DETECTOR (COMMENTED OUT)
    % f_target = 84; % Ingenuity rotor frequency
    % L = 1.0;
    % C = 1/((2*pi*f_target)^2 * L);
    % R = 50;
    
    N = length(Vin);
    % Ensure Vin is a row vector for consistent operations
    if size(Vin, 1) > size(Vin, 2)
        Vin = Vin';
    end
    Vout = zeros(size(Vin));
    if N > 10000
        chunk_size = 10000;
        v_C_current = 0;
        i_current = 0;
        
        for chunk_start = 1:chunk_size:N
            chunk_end = min(chunk_start + chunk_size - 1, N);
            chunk_length = chunk_end - chunk_start + 1;
            
            v_C_chunk = zeros(1, chunk_length);
            i_chunk = zeros(1, chunk_length);
            v_C_chunk(1) = v_C_current;
            i_chunk(1) = i_current;
            
            A = [1 - h/(R*C), -h/C; h/L, 1 - (h*R)/L];
            B = [h/(R*C); h/L];
            
            for k = 1:chunk_length-1
                x_next = A * [v_C_chunk(k); i_chunk(k)] + B * Vin(chunk_start + k - 1);
                v_C_chunk(k+1) = x_next(1);
                i_chunk(k+1) = x_next(2);
            end
            
            Vout(chunk_start:chunk_end) = i_chunk * R;
            v_C_current = v_C_chunk(end);
            i_current = i_chunk(end);
        end
    else
        v_C = zeros(1, N);
        i = zeros(1, N);
        v_C(1) = 0;
        i(1) = 0;
        A = [1 - h/(R*C), -h/C; h/L, 1 - (h*R)/L];
        B = [h/(R*C); h/L];
        for k = 1:N-1
            x_next = A * [v_C(k); i(k)] + B * Vin(k);
            v_C(k+1) = x_next(1);
            i(k+1) = x_next(2);
        end
        Vout = i * R;
    end
    % TASK 4 ENVELOPE DETECTION (COMMENTED OUT)
    % Vout = abs(Vout);
    if size(Vin, 1) > size(Vin, 2)
        Vout = Vout';
    end
end